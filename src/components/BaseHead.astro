---
// Import the global.css file so it is included on all pages.
import '../styles/global.css';

import { SEO } from 'astro-seo';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import type { ImageMetadata } from 'astro:assets';

export interface Props {
	title?: string;
	description?: string;
	image?: ImageMetadata; 
    imageAlt?: string;
}

// Use props passed from the page, or fall back to site-wide defaults
const {
	title = SITE_TITLE,
	description = SITE_DESCRIPTION,
	image,
    imageAlt = 'A decorative image for the Techzard blog',
} = Astro.props;

// Generate the absolute URL for the social media image.
// It uses the page-specific image if provided, otherwise it uses a default image.
const socialImage = image
	? new URL(image.src, Astro.url).toString()
	: new URL('/default-og-image.png', Astro.url).toString();
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- 
  The astro-seo component handles all of our main SEO and social media tags.
-->
<SEO
	title={title}
	description={description}
	extend={{
		// Sets the <link rel="canonical" href="..."> tag
		link: [{ rel: 'canonical', href: Astro.url.href }],
	}}
	openGraph={{
		basic: {
			title: title,
			description: description,
			url: Astro.url.href,
			image: socialImage,
			type: 'article',
			site_name: SITE_TITLE,
		},
        imageAlt: imageAlt,
	}}
	twitter={{
		// Use a large image card for a nice visual preview
		card: 'summary_large_image',
		title: title,
		description: description,
		image: socialImage,
        imageAlt: imageAlt,
	}}
/>